///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ArticlesResponseArticlesAuthor {
/*
{
  "username": "Maksim Esteban",
  "bio": "null",
  "image": "https://api.realworld.io/images/demo-avatar.png",
  "following": false
} 
*/

  String? username;
  String? bio;
  String? image;
  bool? following;
  Map<String, dynamic> __origJson = {};

  ArticlesResponseArticlesAuthor({
    this.username,
    this.bio,
    this.image,
    this.following,
  });
  ArticlesResponseArticlesAuthor.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    username = json['username']?.toString();
    bio = json['bio']?.toString();
    image = json['image']?.toString();
    following = json['following'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['username'] = username;
    data['bio'] = bio;
    data['image'] = image;
    data['following'] = following;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class ArticlesResponseArticles {
/*
{
  "slug": "Ill-quantify-the-redundant-TCP-bus-that-should-hard-drive-the-ADP-bandwidth!-553",
  "title": "Ill quantify the redundant TCP bus, that should hard drive the ADP bandwidth!",
  "description": "Aut facilis qui. Cupiditate sit ratione eum sunt rerum impedit. Qui suscipit debitis et et voluptates voluptatem voluptatibus. Quas voluptatum quae corporis corporis possimus.",
  "body": "Quis nesciunt ut est eos.\\nQui reiciendis doloribus.\\nEst quidem ullam reprehenderit.\\nEst omnis eligendi quis quis quo eum officiis asperiores quis. Et sed dicta eveniet accusamus consequatur.\\nUllam voluptas consequatur aut eos ducimus.\\nId officia est ut dicta provident beatae ipsa. Pariatur quo neque est perspiciatis non illo rerum expedita minima.\\nEt commodi voluptas eos ex.\\nUnde velit delectus deleniti deleniti non in sit.\\nAliquid voluptatem magni. Iusto laborum aperiam neque delectus consequuntur provident est maiores explicabo. Est est sed itaque necessitatibus vitae officiis.\\nIusto dolores sint eveniet quasi dolore quo laborum esse laboriosam.\\nModi similique aut voluptates animi aut dicta dolorum.\\nSint explicabo autem quidem et.\\nNeque aspernatur assumenda fugit provident. Et fuga repellendus magnam dignissimos eius aspernatur rerum. Dolorum eius dignissimos et magnam voluptate aut voluptatem natus.\\nAut sint est eum molestiae consequatur officia omnis.\\nQuae et quam odit voluptatum itaque ducimus magni dolores ab.\\nDolorum sed iure voluptatem et reiciendis. Eveniet sit ipsa officiis laborum.\\nIn vel est omnis sed impedit quod magni.\\nDignissimos quis illum qui atque aut ut quasi sequi. Eveniet sit ipsa officiis laborum.\\nIn vel est omnis sed impedit quod magni.\\nDignissimos quis illum qui atque aut ut quasi sequi. Sapiente vitae culpa ut voluptatem incidunt excepturi voluptates exercitationem.\\nSed doloribus alias consectetur omnis occaecati ad placeat labore.\\nVoluptate consequatur expedita nemo recusandae sint assumenda.\\nQui vel totam quia fugit saepe suscipit autem quasi qui.\\nEt eum vel ut delectus ut nesciunt animi.",
  "tagList": [
    "sit"
  ],
  "createdAt": "2024-01-04T00:52:58.601Z",
  "updatedAt": "2024-01-04T00:52:58.601Z",
  "favorited": false,
  "favoritesCount": 62,
  "author": {
    "username": "Maksim Esteban",
    "bio": "null",
    "image": "https://api.realworld.io/images/demo-avatar.png",
    "following": false
  }
} 
*/

  String? slug;
  String? title;
  String? description;
  String? body;
  List<String?>? tagList;
  String? createdAt;
  String? updatedAt;
  bool? favorited;
  int? favoritesCount;
  ArticlesResponseArticlesAuthor? author;
  Map<String, dynamic> __origJson = {};

  ArticlesResponseArticles({
    this.slug,
    this.title,
    this.description,
    this.body,
    this.tagList,
    this.createdAt,
    this.updatedAt,
    this.favorited,
    this.favoritesCount,
    this.author,
  });
  ArticlesResponseArticles.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    slug = json['slug']?.toString();
    title = json['title']?.toString();
    description = json['description']?.toString();
    body = json['body']?.toString();
    if (json['tagList'] != null) {
      final v = json['tagList'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      tagList = arr0;
    }
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    favorited = json['favorited'];
    favoritesCount = json['favoritesCount']?.toInt();
    author = (json['author'] != null)
        ? ArticlesResponseArticlesAuthor.fromJson(json['author'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['slug'] = slug;
    data['title'] = title;
    data['description'] = description;
    data['body'] = body;
    if (tagList != null) {
      final v = tagList;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['tagList'] = arr0;
    }
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['favorited'] = favorited;
    data['favoritesCount'] = favoritesCount;
    if (author != null) {
      data['author'] = author!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class ArticlesResponse {
/*
{
  "articles": [
    {
      "slug": "Ill-quantify-the-redundant-TCP-bus-that-should-hard-drive-the-ADP-bandwidth!-553",
      "title": "Ill quantify the redundant TCP bus, that should hard drive the ADP bandwidth!",
      "description": "Aut facilis qui. Cupiditate sit ratione eum sunt rerum impedit. Qui suscipit debitis et et voluptates voluptatem voluptatibus. Quas voluptatum quae corporis corporis possimus.",
      "body": "Quis nesciunt ut est eos.\\nQui reiciendis doloribus.\\nEst quidem ullam reprehenderit.\\nEst omnis eligendi quis quis quo eum officiis asperiores quis. Et sed dicta eveniet accusamus consequatur.\\nUllam voluptas consequatur aut eos ducimus.\\nId officia est ut dicta provident beatae ipsa. Pariatur quo neque est perspiciatis non illo rerum expedita minima.\\nEt commodi voluptas eos ex.\\nUnde velit delectus deleniti deleniti non in sit.\\nAliquid voluptatem magni. Iusto laborum aperiam neque delectus consequuntur provident est maiores explicabo. Est est sed itaque necessitatibus vitae officiis.\\nIusto dolores sint eveniet quasi dolore quo laborum esse laboriosam.\\nModi similique aut voluptates animi aut dicta dolorum.\\nSint explicabo autem quidem et.\\nNeque aspernatur assumenda fugit provident. Et fuga repellendus magnam dignissimos eius aspernatur rerum. Dolorum eius dignissimos et magnam voluptate aut voluptatem natus.\\nAut sint est eum molestiae consequatur officia omnis.\\nQuae et quam odit voluptatum itaque ducimus magni dolores ab.\\nDolorum sed iure voluptatem et reiciendis. Eveniet sit ipsa officiis laborum.\\nIn vel est omnis sed impedit quod magni.\\nDignissimos quis illum qui atque aut ut quasi sequi. Eveniet sit ipsa officiis laborum.\\nIn vel est omnis sed impedit quod magni.\\nDignissimos quis illum qui atque aut ut quasi sequi. Sapiente vitae culpa ut voluptatem incidunt excepturi voluptates exercitationem.\\nSed doloribus alias consectetur omnis occaecati ad placeat labore.\\nVoluptate consequatur expedita nemo recusandae sint assumenda.\\nQui vel totam quia fugit saepe suscipit autem quasi qui.\\nEt eum vel ut delectus ut nesciunt animi.",
      "tagList": [
        "sit"
      ],
      "createdAt": "2024-01-04T00:52:58.601Z",
      "updatedAt": "2024-01-04T00:52:58.601Z",
      "favorited": false,
      "favoritesCount": 62,
      "author": {
        "username": "Maksim Esteban",
        "bio": "null",
        "image": "https://api.realworld.io/images/demo-avatar.png",
        "following": false
      }
    }
  ],
  "articlesCount": 251
} 
*/

  List<ArticlesResponseArticles?>? articles;
  int? articlesCount;
  Map<String, dynamic> __origJson = {};

  ArticlesResponse({
    this.articles,
    this.articlesCount,
  });
  ArticlesResponse.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    if (json['articles'] != null) {
      final v = json['articles'];
      final arr0 = <ArticlesResponseArticles>[];
      v.forEach((v) {
        arr0.add(ArticlesResponseArticles.fromJson(v));
      });
      articles = arr0;
    }
    articlesCount = json['articlesCount']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (articles != null) {
      final v = articles;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['articles'] = arr0;
    }
    data['articlesCount'] = articlesCount;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}
